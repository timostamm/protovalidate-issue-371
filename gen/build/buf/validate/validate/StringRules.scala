// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package build.buf.validate.validate

/** StringRules describes the rules applied to `string` values These
  * rules may also be applied to the `google.protobuf.StringValue` Well-Known-Type.
  *
  * @param const
  *   `const` requires the field value to exactly match the specified value. If
  *   the field value doesn't match, an error message is generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value must equal `hello`
  *     string value = 1 [(buf.validate.field).string.const = "hello"];
  *   }
  *   ```
  * @param len
  *   `len` dictates that the field value must have the specified
  *   number of characters (Unicode code points), which may differ from the number
  *   of bytes in the string. If the field value does not meet the specified
  *   length, an error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value length must be 5 characters
  *     string value = 1 [(buf.validate.field).string.len = 5];
  *   }
  *   ```
  * @param minLen
  *   `min_len` specifies that the field value must have at least the specified
  *   number of characters (Unicode code points), which may differ from the number
  *   of bytes in the string. If the field value contains fewer characters, an error
  *   message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value length must be at least 3 characters
  *     string value = 1 [(buf.validate.field).string.min_len = 3];
  *   }
  *   ```
  * @param maxLen
  *   `max_len` specifies that the field value must have no more than the specified
  *   number of characters (Unicode code points), which may differ from the
  *   number of bytes in the string. If the field value contains more characters,
  *   an error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value length must be at most 10 characters
  *     string value = 1 [(buf.validate.field).string.max_len = 10];
  *   }
  *   ```
  * @param lenBytes
  *   `len_bytes` dictates that the field value must have the specified number of
  *   bytes. If the field value does not match the specified length in bytes,
  *   an error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value length must be 6 bytes
  *     string value = 1 [(buf.validate.field).string.len_bytes = 6];
  *   }
  *   ```
  * @param minBytes
  *   `min_bytes` specifies that the field value must have at least the specified
  *   number of bytes. If the field value contains fewer bytes, an error message
  *   will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value length must be at least 4 bytes
  *     string value = 1 [(buf.validate.field).string.min_bytes = 4];
  *   }
  *  
  *   ```
  * @param maxBytes
  *   `max_bytes` specifies that the field value must have no more than the
  *  specified number of bytes. If the field value contains more bytes, an
  *   error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value length must be at most 8 bytes
  *     string value = 1 [(buf.validate.field).string.max_bytes = 8];
  *   }
  *   ```
  * @param pattern
  *   `pattern` specifies that the field value must match the specified
  *   regular expression (RE2 syntax), with the expression provided without any
  *   delimiters. If the field value doesn't match the regular expression, an
  *   error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value does not match regex pattern `^[a-zA-Z]//$`
  *     string value = 1 [(buf.validate.field).string.pattern = "^[a-zA-Z]//$"];
  *   }
  *   ```
  * @param prefix
  *   `prefix` specifies that the field value must have the
  *  specified substring at the beginning of the string. If the field value
  *   doesn't start with the specified prefix, an error message will be
  *   generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value does not have prefix `pre`
  *     string value = 1 [(buf.validate.field).string.prefix = "pre"];
  *   }
  *   ```
  * @param suffix
  *   `suffix` specifies that the field value must have the
  *  specified substring at the end of the string. If the field value doesn't
  *   end with the specified suffix, an error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value does not have suffix `post`
  *     string value = 1 [(buf.validate.field).string.suffix = "post"];
  *   }
  *   ```
  * @param contains
  *   `contains` specifies that the field value must have the
  *  specified substring anywhere in the string. If the field value doesn't
  *   contain the specified substring, an error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value does not contain substring `inside`.
  *     string value = 1 [(buf.validate.field).string.contains = "inside"];
  *   }
  *   ```
  * @param notContains
  *   `not_contains` specifies that the field value must not have the
  *  specified substring anywhere in the string. If the field value contains
  *   the specified substring, an error message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value contains substring `inside`.
  *     string value = 1 [(buf.validate.field).string.not_contains = "inside"];
  *   }
  *   ```
  * @param in
  *   `in` specifies that the field value must be equal to one of the specified
  *   values. If the field value isn't one of the specified values, an error
  *   message will be generated.
  *  
  *   ```proto
  *   message MyString {
  *     // value must be in list ["apple", "banana"]
  *     string value = 1 [(buf.validate.field).string.in = "apple", (buf.validate.field).string.in = "banana"];
  *   }
  *   ```
  * @param notIn
  *   `not_in` specifies that the field value cannot be equal to any
  *   of the specified values. If the field value is one of the specified values,
  *   an error message will be generated.
  *   ```proto
  *   message MyString {
  *     // value must not be in list ["orange", "grape"]
  *     string value = 1 [(buf.validate.field).string.not_in = "orange", (buf.validate.field).string.not_in = "grape"];
  *   }
  *   ```
  * @param strict
  *   This applies to regexes `HTTP_HEADER_NAME` and `HTTP_HEADER_VALUE` to
  *   enable strict header validation. By default, this is true, and HTTP header
  *   validations are [RFC-compliant](https://datatracker.ietf.org/doc/html/rfc7230#section-3). Setting to false will enable looser
  *   validations that only disallow `&92;r&92;n&92;0` characters, which can be used to
  *   bypass header matching rules.
  *  
  *   ```proto
  *   message MyString {
  *     // The field `value` must have be a valid HTTP headers, but not enforced with strict rules.
  *     string value = 1 [(buf.validate.field).string.strict = false];
  *   }
  *   ```
  * @param example
  *   `example` specifies values that the field may have. These values SHOULD
  *   conform to other rules. `example` values will not impact validation
  *   but may be used as helpful guidance on how to populate the given field.
  *  
  *   ```proto
  *   message MyString {
  *     string value = 1 [
  *       (buf.validate.field).string.example = "hello",
  *       (buf.validate.field).string.example = "world"
  *     ];
  *   }
  *   ```
  */
@SerialVersionUID(0L)
final case class StringRules(
    const: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    len: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    minLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    maxLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    lenBytes: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    minBytes: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    maxBytes: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    pattern: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    prefix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    suffix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    contains: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    notContains: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    in: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    notIn: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    wellKnown: build.buf.validate.validate.StringRules.WellKnown = build.buf.validate.validate.StringRules.WellKnown.Empty,
    strict: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    example: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[StringRules] with _root_.scalapb.ExtendableMessage[StringRules] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (const.isDefined) {
        val __value = const.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (len.isDefined) {
        val __value = len.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(19, __value)
      };
      if (minLen.isDefined) {
        val __value = minLen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
      };
      if (maxLen.isDefined) {
        val __value = maxLen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, __value)
      };
      if (lenBytes.isDefined) {
        val __value = lenBytes.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(20, __value)
      };
      if (minBytes.isDefined) {
        val __value = minBytes.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, __value)
      };
      if (maxBytes.isDefined) {
        val __value = maxBytes.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, __value)
      };
      if (pattern.isDefined) {
        val __value = pattern.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
      };
      if (prefix.isDefined) {
        val __value = prefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
      };
      if (suffix.isDefined) {
        val __value = suffix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      };
      if (contains.isDefined) {
        val __value = contains.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
      };
      if (notContains.isDefined) {
        val __value = notContains.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(23, __value)
      };
      in.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      }
      notIn.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      }
      if (wellKnown.email.isDefined) {
        val __value = wellKnown.email.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(12, __value)
      };
      if (wellKnown.hostname.isDefined) {
        val __value = wellKnown.hostname.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(13, __value)
      };
      if (wellKnown.ip.isDefined) {
        val __value = wellKnown.ip.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(14, __value)
      };
      if (wellKnown.ipv4.isDefined) {
        val __value = wellKnown.ipv4.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(15, __value)
      };
      if (wellKnown.ipv6.isDefined) {
        val __value = wellKnown.ipv6.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(16, __value)
      };
      if (wellKnown.uri.isDefined) {
        val __value = wellKnown.uri.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(17, __value)
      };
      if (wellKnown.uriRef.isDefined) {
        val __value = wellKnown.uriRef.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(18, __value)
      };
      if (wellKnown.address.isDefined) {
        val __value = wellKnown.address.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(21, __value)
      };
      if (wellKnown.uuid.isDefined) {
        val __value = wellKnown.uuid.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(22, __value)
      };
      if (wellKnown.tuuid.isDefined) {
        val __value = wellKnown.tuuid.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(33, __value)
      };
      if (wellKnown.ipWithPrefixlen.isDefined) {
        val __value = wellKnown.ipWithPrefixlen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(26, __value)
      };
      if (wellKnown.ipv4WithPrefixlen.isDefined) {
        val __value = wellKnown.ipv4WithPrefixlen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(27, __value)
      };
      if (wellKnown.ipv6WithPrefixlen.isDefined) {
        val __value = wellKnown.ipv6WithPrefixlen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(28, __value)
      };
      if (wellKnown.ipPrefix.isDefined) {
        val __value = wellKnown.ipPrefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(29, __value)
      };
      if (wellKnown.ipv4Prefix.isDefined) {
        val __value = wellKnown.ipv4Prefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(30, __value)
      };
      if (wellKnown.ipv6Prefix.isDefined) {
        val __value = wellKnown.ipv6Prefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(31, __value)
      };
      if (wellKnown.hostAndPort.isDefined) {
        val __value = wellKnown.hostAndPort.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(32, __value)
      };
      if (wellKnown.wellKnownRegex.isDefined) {
        val __value = wellKnown.wellKnownRegex.get.value
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(24, __value)
      };
      if (strict.isDefined) {
        val __value = strict.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(25, __value)
      };
      example.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(34, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      const.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      minLen.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(2, __m)
      };
      maxLen.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(3, __m)
      };
      minBytes.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(4, __m)
      };
      maxBytes.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(5, __m)
      };
      pattern.foreach { __v =>
        val __m = __v
        _output__.writeString(6, __m)
      };
      prefix.foreach { __v =>
        val __m = __v
        _output__.writeString(7, __m)
      };
      suffix.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      contains.foreach { __v =>
        val __m = __v
        _output__.writeString(9, __m)
      };
      in.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      notIn.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      wellKnown.email.foreach { __v =>
        val __m = __v
        _output__.writeBool(12, __m)
      };
      wellKnown.hostname.foreach { __v =>
        val __m = __v
        _output__.writeBool(13, __m)
      };
      wellKnown.ip.foreach { __v =>
        val __m = __v
        _output__.writeBool(14, __m)
      };
      wellKnown.ipv4.foreach { __v =>
        val __m = __v
        _output__.writeBool(15, __m)
      };
      wellKnown.ipv6.foreach { __v =>
        val __m = __v
        _output__.writeBool(16, __m)
      };
      wellKnown.uri.foreach { __v =>
        val __m = __v
        _output__.writeBool(17, __m)
      };
      wellKnown.uriRef.foreach { __v =>
        val __m = __v
        _output__.writeBool(18, __m)
      };
      len.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(19, __m)
      };
      lenBytes.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(20, __m)
      };
      wellKnown.address.foreach { __v =>
        val __m = __v
        _output__.writeBool(21, __m)
      };
      wellKnown.uuid.foreach { __v =>
        val __m = __v
        _output__.writeBool(22, __m)
      };
      notContains.foreach { __v =>
        val __m = __v
        _output__.writeString(23, __m)
      };
      wellKnown.wellKnownRegex.foreach { __v =>
        val __m = __v.value
        _output__.writeEnum(24, __m)
      };
      strict.foreach { __v =>
        val __m = __v
        _output__.writeBool(25, __m)
      };
      wellKnown.ipWithPrefixlen.foreach { __v =>
        val __m = __v
        _output__.writeBool(26, __m)
      };
      wellKnown.ipv4WithPrefixlen.foreach { __v =>
        val __m = __v
        _output__.writeBool(27, __m)
      };
      wellKnown.ipv6WithPrefixlen.foreach { __v =>
        val __m = __v
        _output__.writeBool(28, __m)
      };
      wellKnown.ipPrefix.foreach { __v =>
        val __m = __v
        _output__.writeBool(29, __m)
      };
      wellKnown.ipv4Prefix.foreach { __v =>
        val __m = __v
        _output__.writeBool(30, __m)
      };
      wellKnown.ipv6Prefix.foreach { __v =>
        val __m = __v
        _output__.writeBool(31, __m)
      };
      wellKnown.hostAndPort.foreach { __v =>
        val __m = __v
        _output__.writeBool(32, __m)
      };
      wellKnown.tuuid.foreach { __v =>
        val __m = __v
        _output__.writeBool(33, __m)
      };
      example.foreach { __v =>
        val __m = __v
        _output__.writeString(34, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getConst: _root_.scala.Predef.String = const.getOrElse("")
    def clearConst: StringRules = copy(const = _root_.scala.None)
    def withConst(__v: _root_.scala.Predef.String): StringRules = copy(const = Option(__v))
    def getLen: _root_.scala.Long = len.getOrElse(0L)
    def clearLen: StringRules = copy(len = _root_.scala.None)
    def withLen(__v: _root_.scala.Long): StringRules = copy(len = Option(__v))
    def getMinLen: _root_.scala.Long = minLen.getOrElse(0L)
    def clearMinLen: StringRules = copy(minLen = _root_.scala.None)
    def withMinLen(__v: _root_.scala.Long): StringRules = copy(minLen = Option(__v))
    def getMaxLen: _root_.scala.Long = maxLen.getOrElse(0L)
    def clearMaxLen: StringRules = copy(maxLen = _root_.scala.None)
    def withMaxLen(__v: _root_.scala.Long): StringRules = copy(maxLen = Option(__v))
    def getLenBytes: _root_.scala.Long = lenBytes.getOrElse(0L)
    def clearLenBytes: StringRules = copy(lenBytes = _root_.scala.None)
    def withLenBytes(__v: _root_.scala.Long): StringRules = copy(lenBytes = Option(__v))
    def getMinBytes: _root_.scala.Long = minBytes.getOrElse(0L)
    def clearMinBytes: StringRules = copy(minBytes = _root_.scala.None)
    def withMinBytes(__v: _root_.scala.Long): StringRules = copy(minBytes = Option(__v))
    def getMaxBytes: _root_.scala.Long = maxBytes.getOrElse(0L)
    def clearMaxBytes: StringRules = copy(maxBytes = _root_.scala.None)
    def withMaxBytes(__v: _root_.scala.Long): StringRules = copy(maxBytes = Option(__v))
    def getPattern: _root_.scala.Predef.String = pattern.getOrElse("")
    def clearPattern: StringRules = copy(pattern = _root_.scala.None)
    def withPattern(__v: _root_.scala.Predef.String): StringRules = copy(pattern = Option(__v))
    def getPrefix: _root_.scala.Predef.String = prefix.getOrElse("")
    def clearPrefix: StringRules = copy(prefix = _root_.scala.None)
    def withPrefix(__v: _root_.scala.Predef.String): StringRules = copy(prefix = Option(__v))
    def getSuffix: _root_.scala.Predef.String = suffix.getOrElse("")
    def clearSuffix: StringRules = copy(suffix = _root_.scala.None)
    def withSuffix(__v: _root_.scala.Predef.String): StringRules = copy(suffix = Option(__v))
    def getContains: _root_.scala.Predef.String = contains.getOrElse("")
    def clearContains: StringRules = copy(contains = _root_.scala.None)
    def withContains(__v: _root_.scala.Predef.String): StringRules = copy(contains = Option(__v))
    def getNotContains: _root_.scala.Predef.String = notContains.getOrElse("")
    def clearNotContains: StringRules = copy(notContains = _root_.scala.None)
    def withNotContains(__v: _root_.scala.Predef.String): StringRules = copy(notContains = Option(__v))
    def clearIn = copy(in = _root_.scala.Seq.empty)
    def addIn(__vs: _root_.scala.Predef.String *): StringRules = addAllIn(__vs)
    def addAllIn(__vs: Iterable[_root_.scala.Predef.String]): StringRules = copy(in = in ++ __vs)
    def withIn(__v: _root_.scala.Seq[_root_.scala.Predef.String]): StringRules = copy(in = __v)
    def clearNotIn = copy(notIn = _root_.scala.Seq.empty)
    def addNotIn(__vs: _root_.scala.Predef.String *): StringRules = addAllNotIn(__vs)
    def addAllNotIn(__vs: Iterable[_root_.scala.Predef.String]): StringRules = copy(notIn = notIn ++ __vs)
    def withNotIn(__v: _root_.scala.Seq[_root_.scala.Predef.String]): StringRules = copy(notIn = __v)
    def getEmail: _root_.scala.Boolean = wellKnown.email.getOrElse(false)
    def withEmail(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Email(__v))
    def getHostname: _root_.scala.Boolean = wellKnown.hostname.getOrElse(false)
    def withHostname(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Hostname(__v))
    def getIp: _root_.scala.Boolean = wellKnown.ip.getOrElse(false)
    def withIp(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ip(__v))
    def getIpv4: _root_.scala.Boolean = wellKnown.ipv4.getOrElse(false)
    def withIpv4(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4(__v))
    def getIpv6: _root_.scala.Boolean = wellKnown.ipv6.getOrElse(false)
    def withIpv6(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6(__v))
    def getUri: _root_.scala.Boolean = wellKnown.uri.getOrElse(false)
    def withUri(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Uri(__v))
    def getUriRef: _root_.scala.Boolean = wellKnown.uriRef.getOrElse(false)
    def withUriRef(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.UriRef(__v))
    def getAddress: _root_.scala.Boolean = wellKnown.address.getOrElse(false)
    def withAddress(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Address(__v))
    def getUuid: _root_.scala.Boolean = wellKnown.uuid.getOrElse(false)
    def withUuid(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Uuid(__v))
    def getTuuid: _root_.scala.Boolean = wellKnown.tuuid.getOrElse(false)
    def withTuuid(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Tuuid(__v))
    def getIpWithPrefixlen: _root_.scala.Boolean = wellKnown.ipWithPrefixlen.getOrElse(false)
    def withIpWithPrefixlen(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.IpWithPrefixlen(__v))
    def getIpv4WithPrefixlen: _root_.scala.Boolean = wellKnown.ipv4WithPrefixlen.getOrElse(false)
    def withIpv4WithPrefixlen(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4WithPrefixlen(__v))
    def getIpv6WithPrefixlen: _root_.scala.Boolean = wellKnown.ipv6WithPrefixlen.getOrElse(false)
    def withIpv6WithPrefixlen(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6WithPrefixlen(__v))
    def getIpPrefix: _root_.scala.Boolean = wellKnown.ipPrefix.getOrElse(false)
    def withIpPrefix(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.IpPrefix(__v))
    def getIpv4Prefix: _root_.scala.Boolean = wellKnown.ipv4Prefix.getOrElse(false)
    def withIpv4Prefix(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4Prefix(__v))
    def getIpv6Prefix: _root_.scala.Boolean = wellKnown.ipv6Prefix.getOrElse(false)
    def withIpv6Prefix(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6Prefix(__v))
    def getHostAndPort: _root_.scala.Boolean = wellKnown.hostAndPort.getOrElse(false)
    def withHostAndPort(__v: _root_.scala.Boolean): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.HostAndPort(__v))
    def getWellKnownRegex: build.buf.validate.validate.KnownRegex = wellKnown.wellKnownRegex.getOrElse(build.buf.validate.validate.KnownRegex.KNOWN_REGEX_UNSPECIFIED)
    def withWellKnownRegex(__v: build.buf.validate.validate.KnownRegex): StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.WellKnownRegex(__v))
    def getStrict: _root_.scala.Boolean = strict.getOrElse(false)
    def clearStrict: StringRules = copy(strict = _root_.scala.None)
    def withStrict(__v: _root_.scala.Boolean): StringRules = copy(strict = Option(__v))
    def clearExample = copy(example = _root_.scala.Seq.empty)
    def addExample(__vs: _root_.scala.Predef.String *): StringRules = addAllExample(__vs)
    def addAllExample(__vs: Iterable[_root_.scala.Predef.String]): StringRules = copy(example = example ++ __vs)
    def withExample(__v: _root_.scala.Seq[_root_.scala.Predef.String]): StringRules = copy(example = __v)
    def clearWellKnown: StringRules = copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Empty)
    def withWellKnown(__v: build.buf.validate.validate.StringRules.WellKnown): StringRules = copy(wellKnown = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => const.orNull
        case 19 => len.orNull
        case 2 => minLen.orNull
        case 3 => maxLen.orNull
        case 20 => lenBytes.orNull
        case 4 => minBytes.orNull
        case 5 => maxBytes.orNull
        case 6 => pattern.orNull
        case 7 => prefix.orNull
        case 8 => suffix.orNull
        case 9 => contains.orNull
        case 23 => notContains.orNull
        case 10 => in
        case 11 => notIn
        case 12 => wellKnown.email.orNull
        case 13 => wellKnown.hostname.orNull
        case 14 => wellKnown.ip.orNull
        case 15 => wellKnown.ipv4.orNull
        case 16 => wellKnown.ipv6.orNull
        case 17 => wellKnown.uri.orNull
        case 18 => wellKnown.uriRef.orNull
        case 21 => wellKnown.address.orNull
        case 22 => wellKnown.uuid.orNull
        case 33 => wellKnown.tuuid.orNull
        case 26 => wellKnown.ipWithPrefixlen.orNull
        case 27 => wellKnown.ipv4WithPrefixlen.orNull
        case 28 => wellKnown.ipv6WithPrefixlen.orNull
        case 29 => wellKnown.ipPrefix.orNull
        case 30 => wellKnown.ipv4Prefix.orNull
        case 31 => wellKnown.ipv6Prefix.orNull
        case 32 => wellKnown.hostAndPort.orNull
        case 24 => wellKnown.wellKnownRegex.map(_.javaValueDescriptor).orNull
        case 25 => strict.orNull
        case 34 => example
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => const.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 19 => len.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => minLen.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => maxLen.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => lenBytes.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => minBytes.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => maxBytes.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => pattern.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => prefix.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => suffix.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => contains.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 23 => notContains.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => _root_.scalapb.descriptors.PRepeated(in.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 11 => _root_.scalapb.descriptors.PRepeated(notIn.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 12 => wellKnown.email.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => wellKnown.hostname.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => wellKnown.ip.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 15 => wellKnown.ipv4.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 16 => wellKnown.ipv6.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 17 => wellKnown.uri.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 18 => wellKnown.uriRef.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 21 => wellKnown.address.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 22 => wellKnown.uuid.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 33 => wellKnown.tuuid.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 26 => wellKnown.ipWithPrefixlen.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 27 => wellKnown.ipv4WithPrefixlen.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 28 => wellKnown.ipv6WithPrefixlen.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 29 => wellKnown.ipPrefix.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 30 => wellKnown.ipv4Prefix.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 31 => wellKnown.ipv6Prefix.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 32 => wellKnown.hostAndPort.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 24 => wellKnown.wellKnownRegex.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 25 => strict.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 34 => _root_.scalapb.descriptors.PRepeated(example.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: build.buf.validate.validate.StringRules.type = build.buf.validate.validate.StringRules
    // @@protoc_insertion_point(GeneratedMessage[buf.validate.StringRules])
}

object StringRules extends scalapb.GeneratedMessageCompanion[build.buf.validate.validate.StringRules] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[build.buf.validate.validate.StringRules] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): build.buf.validate.validate.StringRules = {
    var __const: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __len: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __minLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __maxLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __lenBytes: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __minBytes: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __maxBytes: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __pattern: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __prefix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __suffix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __contains: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __notContains: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    val __in: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __notIn: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __strict: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    val __example: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __wellKnown: build.buf.validate.validate.StringRules.WellKnown = build.buf.validate.validate.StringRules.WellKnown.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __const = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 152 =>
          __len = _root_.scala.Option(_input__.readUInt64())
        case 16 =>
          __minLen = _root_.scala.Option(_input__.readUInt64())
        case 24 =>
          __maxLen = _root_.scala.Option(_input__.readUInt64())
        case 160 =>
          __lenBytes = _root_.scala.Option(_input__.readUInt64())
        case 32 =>
          __minBytes = _root_.scala.Option(_input__.readUInt64())
        case 40 =>
          __maxBytes = _root_.scala.Option(_input__.readUInt64())
        case 50 =>
          __pattern = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 58 =>
          __prefix = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 66 =>
          __suffix = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 74 =>
          __contains = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 186 =>
          __notContains = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 82 =>
          __in += _input__.readStringRequireUtf8()
        case 90 =>
          __notIn += _input__.readStringRequireUtf8()
        case 96 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Email(_input__.readBool())
        case 104 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Hostname(_input__.readBool())
        case 112 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ip(_input__.readBool())
        case 120 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4(_input__.readBool())
        case 128 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6(_input__.readBool())
        case 136 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Uri(_input__.readBool())
        case 144 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.UriRef(_input__.readBool())
        case 168 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Address(_input__.readBool())
        case 176 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Uuid(_input__.readBool())
        case 264 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Tuuid(_input__.readBool())
        case 208 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.IpWithPrefixlen(_input__.readBool())
        case 216 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4WithPrefixlen(_input__.readBool())
        case 224 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6WithPrefixlen(_input__.readBool())
        case 232 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.IpPrefix(_input__.readBool())
        case 240 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4Prefix(_input__.readBool())
        case 248 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6Prefix(_input__.readBool())
        case 256 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.HostAndPort(_input__.readBool())
        case 192 =>
          __wellKnown = build.buf.validate.validate.StringRules.WellKnown.WellKnownRegex(build.buf.validate.validate.KnownRegex.fromValue(_input__.readEnum()))
        case 200 =>
          __strict = _root_.scala.Option(_input__.readBool())
        case 274 =>
          __example += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    build.buf.validate.validate.StringRules(
        const = __const,
        len = __len,
        minLen = __minLen,
        maxLen = __maxLen,
        lenBytes = __lenBytes,
        minBytes = __minBytes,
        maxBytes = __maxBytes,
        pattern = __pattern,
        prefix = __prefix,
        suffix = __suffix,
        contains = __contains,
        notContains = __notContains,
        in = __in.result(),
        notIn = __notIn.result(),
        strict = __strict,
        example = __example.result(),
        wellKnown = __wellKnown,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[build.buf.validate.validate.StringRules] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      build.buf.validate.validate.StringRules(
        const = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        len = __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        minLen = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        maxLen = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        lenBytes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        minBytes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        maxBytes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        pattern = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        prefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        suffix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        contains = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        notContains = __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        in = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        notIn = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        strict = __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        example = __fieldsMap.get(scalaDescriptor.findFieldByNumber(34).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        wellKnown = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Email(_))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Hostname(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ip(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ipv4(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ipv6(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Uri(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.UriRef(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Address(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Uuid(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Tuuid(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(26).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.IpWithPrefixlen(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ipv4WithPrefixlen(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ipv6WithPrefixlen(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.IpPrefix(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ipv4Prefix(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.Ipv6Prefix(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.StringRules.WellKnown.HostAndPort(_)))
            .orElse[build.buf.validate.validate.StringRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => build.buf.validate.validate.StringRules.WellKnown.WellKnownRegex(build.buf.validate.validate.KnownRegex.fromValue(__e.number))))
            .getOrElse(build.buf.validate.validate.StringRules.WellKnown.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ValidateProto.javaDescriptor.getMessageTypes().get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ValidateProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 24 => build.buf.validate.validate.KnownRegex
    }
  }
  lazy val defaultInstance = build.buf.validate.validate.StringRules(
    const = _root_.scala.None,
    len = _root_.scala.None,
    minLen = _root_.scala.None,
    maxLen = _root_.scala.None,
    lenBytes = _root_.scala.None,
    minBytes = _root_.scala.None,
    maxBytes = _root_.scala.None,
    pattern = _root_.scala.None,
    prefix = _root_.scala.None,
    suffix = _root_.scala.None,
    contains = _root_.scala.None,
    notContains = _root_.scala.None,
    in = _root_.scala.Seq.empty,
    notIn = _root_.scala.Seq.empty,
    strict = _root_.scala.None,
    example = _root_.scala.Seq.empty,
    wellKnown = build.buf.validate.validate.StringRules.WellKnown.Empty
  )
  sealed trait WellKnown extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isEmail: _root_.scala.Boolean = false
    def isHostname: _root_.scala.Boolean = false
    def isIp: _root_.scala.Boolean = false
    def isIpv4: _root_.scala.Boolean = false
    def isIpv6: _root_.scala.Boolean = false
    def isUri: _root_.scala.Boolean = false
    def isUriRef: _root_.scala.Boolean = false
    def isAddress: _root_.scala.Boolean = false
    def isUuid: _root_.scala.Boolean = false
    def isTuuid: _root_.scala.Boolean = false
    def isIpWithPrefixlen: _root_.scala.Boolean = false
    def isIpv4WithPrefixlen: _root_.scala.Boolean = false
    def isIpv6WithPrefixlen: _root_.scala.Boolean = false
    def isIpPrefix: _root_.scala.Boolean = false
    def isIpv4Prefix: _root_.scala.Boolean = false
    def isIpv6Prefix: _root_.scala.Boolean = false
    def isHostAndPort: _root_.scala.Boolean = false
    def isWellKnownRegex: _root_.scala.Boolean = false
    def email: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def hostname: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ip: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv4: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv6: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def uri: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def uriRef: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def address: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def uuid: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def tuuid: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipWithPrefixlen: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv4WithPrefixlen: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv6WithPrefixlen: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipPrefix: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv4Prefix: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv6Prefix: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def hostAndPort: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def wellKnownRegex: _root_.scala.Option[build.buf.validate.validate.KnownRegex] = _root_.scala.None
  }
  object WellKnown {
    @SerialVersionUID(0L)
    case object Empty extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Email(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isEmail: _root_.scala.Boolean = true
      override def email: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 12
    }
    @SerialVersionUID(0L)
    final case class Hostname(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isHostname: _root_.scala.Boolean = true
      override def hostname: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 13
    }
    @SerialVersionUID(0L)
    final case class Ip(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIp: _root_.scala.Boolean = true
      override def ip: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 14
    }
    @SerialVersionUID(0L)
    final case class Ipv4(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv4: _root_.scala.Boolean = true
      override def ipv4: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 15
    }
    @SerialVersionUID(0L)
    final case class Ipv6(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv6: _root_.scala.Boolean = true
      override def ipv6: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 16
    }
    @SerialVersionUID(0L)
    final case class Uri(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isUri: _root_.scala.Boolean = true
      override def uri: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 17
    }
    @SerialVersionUID(0L)
    final case class UriRef(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isUriRef: _root_.scala.Boolean = true
      override def uriRef: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 18
    }
    @SerialVersionUID(0L)
    final case class Address(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isAddress: _root_.scala.Boolean = true
      override def address: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 21
    }
    @SerialVersionUID(0L)
    final case class Uuid(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isUuid: _root_.scala.Boolean = true
      override def uuid: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 22
    }
    @SerialVersionUID(0L)
    final case class Tuuid(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isTuuid: _root_.scala.Boolean = true
      override def tuuid: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 33
    }
    @SerialVersionUID(0L)
    final case class IpWithPrefixlen(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpWithPrefixlen: _root_.scala.Boolean = true
      override def ipWithPrefixlen: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 26
    }
    @SerialVersionUID(0L)
    final case class Ipv4WithPrefixlen(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv4WithPrefixlen: _root_.scala.Boolean = true
      override def ipv4WithPrefixlen: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 27
    }
    @SerialVersionUID(0L)
    final case class Ipv6WithPrefixlen(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv6WithPrefixlen: _root_.scala.Boolean = true
      override def ipv6WithPrefixlen: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 28
    }
    @SerialVersionUID(0L)
    final case class IpPrefix(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpPrefix: _root_.scala.Boolean = true
      override def ipPrefix: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 29
    }
    @SerialVersionUID(0L)
    final case class Ipv4Prefix(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv4Prefix: _root_.scala.Boolean = true
      override def ipv4Prefix: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 30
    }
    @SerialVersionUID(0L)
    final case class Ipv6Prefix(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv6Prefix: _root_.scala.Boolean = true
      override def ipv6Prefix: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 31
    }
    @SerialVersionUID(0L)
    final case class HostAndPort(value: _root_.scala.Boolean) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isHostAndPort: _root_.scala.Boolean = true
      override def hostAndPort: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 32
    }
    @SerialVersionUID(0L)
    final case class WellKnownRegex(value: build.buf.validate.validate.KnownRegex) extends build.buf.validate.validate.StringRules.WellKnown {
      type ValueType = build.buf.validate.validate.KnownRegex
      override def isWellKnownRegex: _root_.scala.Boolean = true
      override def wellKnownRegex: _root_.scala.Option[build.buf.validate.validate.KnownRegex] = Some(value)
      override def number: _root_.scala.Int = 24
    }
  }
  implicit class StringRulesLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.StringRules]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, build.buf.validate.validate.StringRules](_l) {
    def const: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getConst)((c_, f_) => c_.copy(const = _root_.scala.Option(f_)))
    def optionalConst: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.const)((c_, f_) => c_.copy(const = f_))
    def len: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getLen)((c_, f_) => c_.copy(len = _root_.scala.Option(f_)))
    def optionalLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.len)((c_, f_) => c_.copy(len = f_))
    def minLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getMinLen)((c_, f_) => c_.copy(minLen = _root_.scala.Option(f_)))
    def optionalMinLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.minLen)((c_, f_) => c_.copy(minLen = f_))
    def maxLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getMaxLen)((c_, f_) => c_.copy(maxLen = _root_.scala.Option(f_)))
    def optionalMaxLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.maxLen)((c_, f_) => c_.copy(maxLen = f_))
    def lenBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getLenBytes)((c_, f_) => c_.copy(lenBytes = _root_.scala.Option(f_)))
    def optionalLenBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.lenBytes)((c_, f_) => c_.copy(lenBytes = f_))
    def minBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getMinBytes)((c_, f_) => c_.copy(minBytes = _root_.scala.Option(f_)))
    def optionalMinBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.minBytes)((c_, f_) => c_.copy(minBytes = f_))
    def maxBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getMaxBytes)((c_, f_) => c_.copy(maxBytes = _root_.scala.Option(f_)))
    def optionalMaxBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.maxBytes)((c_, f_) => c_.copy(maxBytes = f_))
    def pattern: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPattern)((c_, f_) => c_.copy(pattern = _root_.scala.Option(f_)))
    def optionalPattern: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pattern)((c_, f_) => c_.copy(pattern = f_))
    def prefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPrefix)((c_, f_) => c_.copy(prefix = _root_.scala.Option(f_)))
    def optionalPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.prefix)((c_, f_) => c_.copy(prefix = f_))
    def suffix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getSuffix)((c_, f_) => c_.copy(suffix = _root_.scala.Option(f_)))
    def optionalSuffix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.suffix)((c_, f_) => c_.copy(suffix = f_))
    def contains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getContains)((c_, f_) => c_.copy(contains = _root_.scala.Option(f_)))
    def optionalContains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.contains)((c_, f_) => c_.copy(contains = f_))
    def notContains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getNotContains)((c_, f_) => c_.copy(notContains = _root_.scala.Option(f_)))
    def optionalNotContains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.notContains)((c_, f_) => c_.copy(notContains = f_))
    def in: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.in)((c_, f_) => c_.copy(in = f_))
    def notIn: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.notIn)((c_, f_) => c_.copy(notIn = f_))
    def email: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getEmail)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Email(f_)))
    def hostname: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getHostname)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Hostname(f_)))
    def ip: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIp)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ip(f_)))
    def ipv4: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv4)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4(f_)))
    def ipv6: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv6)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6(f_)))
    def uri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getUri)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Uri(f_)))
    def uriRef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getUriRef)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.UriRef(f_)))
    def address: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getAddress)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Address(f_)))
    def uuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getUuid)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Uuid(f_)))
    def tuuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getTuuid)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Tuuid(f_)))
    def ipWithPrefixlen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpWithPrefixlen)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.IpWithPrefixlen(f_)))
    def ipv4WithPrefixlen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv4WithPrefixlen)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4WithPrefixlen(f_)))
    def ipv6WithPrefixlen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv6WithPrefixlen)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6WithPrefixlen(f_)))
    def ipPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpPrefix)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.IpPrefix(f_)))
    def ipv4Prefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv4Prefix)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv4Prefix(f_)))
    def ipv6Prefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv6Prefix)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.Ipv6Prefix(f_)))
    def hostAndPort: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getHostAndPort)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.HostAndPort(f_)))
    def wellKnownRegex: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.KnownRegex] = field(_.getWellKnownRegex)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.StringRules.WellKnown.WellKnownRegex(f_)))
    def strict: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getStrict)((c_, f_) => c_.copy(strict = _root_.scala.Option(f_)))
    def optionalStrict: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.strict)((c_, f_) => c_.copy(strict = f_))
    def example: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.example)((c_, f_) => c_.copy(example = f_))
    def wellKnown: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.StringRules.WellKnown] = field(_.wellKnown)((c_, f_) => c_.copy(wellKnown = f_))
  }
  final val CONST_FIELD_NUMBER = 1
  final val LEN_FIELD_NUMBER = 19
  final val MIN_LEN_FIELD_NUMBER = 2
  final val MAX_LEN_FIELD_NUMBER = 3
  final val LEN_BYTES_FIELD_NUMBER = 20
  final val MIN_BYTES_FIELD_NUMBER = 4
  final val MAX_BYTES_FIELD_NUMBER = 5
  final val PATTERN_FIELD_NUMBER = 6
  final val PREFIX_FIELD_NUMBER = 7
  final val SUFFIX_FIELD_NUMBER = 8
  final val CONTAINS_FIELD_NUMBER = 9
  final val NOT_CONTAINS_FIELD_NUMBER = 23
  final val IN_FIELD_NUMBER = 10
  final val NOT_IN_FIELD_NUMBER = 11
  final val EMAIL_FIELD_NUMBER = 12
  final val HOSTNAME_FIELD_NUMBER = 13
  final val IP_FIELD_NUMBER = 14
  final val IPV4_FIELD_NUMBER = 15
  final val IPV6_FIELD_NUMBER = 16
  final val URI_FIELD_NUMBER = 17
  final val URI_REF_FIELD_NUMBER = 18
  final val ADDRESS_FIELD_NUMBER = 21
  final val UUID_FIELD_NUMBER = 22
  final val TUUID_FIELD_NUMBER = 33
  final val IP_WITH_PREFIXLEN_FIELD_NUMBER = 26
  final val IPV4_WITH_PREFIXLEN_FIELD_NUMBER = 27
  final val IPV6_WITH_PREFIXLEN_FIELD_NUMBER = 28
  final val IP_PREFIX_FIELD_NUMBER = 29
  final val IPV4_PREFIX_FIELD_NUMBER = 30
  final val IPV6_PREFIX_FIELD_NUMBER = 31
  final val HOST_AND_PORT_FIELD_NUMBER = 32
  final val WELL_KNOWN_REGEX_FIELD_NUMBER = 24
  final val STRICT_FIELD_NUMBER = 25
  final val EXAMPLE_FIELD_NUMBER = 34
  def of(
    const: _root_.scala.Option[_root_.scala.Predef.String],
    len: _root_.scala.Option[_root_.scala.Long],
    minLen: _root_.scala.Option[_root_.scala.Long],
    maxLen: _root_.scala.Option[_root_.scala.Long],
    lenBytes: _root_.scala.Option[_root_.scala.Long],
    minBytes: _root_.scala.Option[_root_.scala.Long],
    maxBytes: _root_.scala.Option[_root_.scala.Long],
    pattern: _root_.scala.Option[_root_.scala.Predef.String],
    prefix: _root_.scala.Option[_root_.scala.Predef.String],
    suffix: _root_.scala.Option[_root_.scala.Predef.String],
    contains: _root_.scala.Option[_root_.scala.Predef.String],
    notContains: _root_.scala.Option[_root_.scala.Predef.String],
    in: _root_.scala.Seq[_root_.scala.Predef.String],
    notIn: _root_.scala.Seq[_root_.scala.Predef.String],
    wellKnown: build.buf.validate.validate.StringRules.WellKnown,
    strict: _root_.scala.Option[_root_.scala.Boolean],
    example: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.build.buf.validate.validate.StringRules = _root_.build.buf.validate.validate.StringRules(
    const,
    len,
    minLen,
    maxLen,
    lenBytes,
    minBytes,
    maxBytes,
    pattern,
    prefix,
    suffix,
    contains,
    notContains,
    in,
    notIn,
    wellKnown,
    strict,
    example
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[buf.validate.StringRules])
}
