// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package build.buf.validate.validate

/** BytesRules describe the rules applied to `bytes` values. These rules
  * may also be applied to the `google.protobuf.BytesValue` Well-Known-Type.
  *
  * @param const
  *   `const` requires the field value to exactly match the specified bytes
  *   value. If the field value doesn't match, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value must be "&92;x01&92;x02&92;x03&92;x04"
  *     bytes value = 1 [(buf.validate.field).bytes.const = "&92;x01&92;x02&92;x03&92;x04"];
  *   }
  *   ```
  * @param len
  *   `len` requires the field value to have the specified length in bytes.
  *   If the field value doesn't match, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value length must be 4 bytes.
  *     optional bytes value = 1 [(buf.validate.field).bytes.len = 4];
  *   }
  *   ```
  * @param minLen
  *   `min_len` requires the field value to have at least the specified minimum
  *   length in bytes.
  *   If the field value doesn't meet the requirement, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value length must be at least 2 bytes.
  *     optional bytes value = 1 [(buf.validate.field).bytes.min_len = 2];
  *   }
  *   ```
  * @param maxLen
  *   `max_len` requires the field value to have at most the specified maximum
  *   length in bytes.
  *   If the field value exceeds the requirement, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value must be at most 6 bytes.
  *     optional bytes value = 1 [(buf.validate.field).bytes.max_len = 6];
  *   }
  *   ```
  * @param pattern
  *   `pattern` requires the field value to match the specified regular
  *   expression ([RE2 syntax](https://github.com/google/re2/wiki/Syntax)).
  *   The value of the field must be valid UTF-8 or validation will fail with a
  *   runtime error.
  *   If the field value doesn't match the pattern, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value must match regex pattern "^[a-zA-Z0-9]+$".
  *     optional bytes value = 1 [(buf.validate.field).bytes.pattern = "^[a-zA-Z0-9]+$"];
  *   }
  *   ```
  * @param prefix
  *   `prefix` requires the field value to have the specified bytes at the
  *   beginning of the string.
  *   If the field value doesn't meet the requirement, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value does not have prefix &92;x01&92;x02
  *     optional bytes value = 1 [(buf.validate.field).bytes.prefix = "&92;x01&92;x02"];
  *   }
  *   ```
  * @param suffix
  *   `suffix` requires the field value to have the specified bytes at the end
  *   of the string.
  *   If the field value doesn't meet the requirement, an error message is generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value does not have suffix &92;x03&92;x04
  *     optional bytes value = 1 [(buf.validate.field).bytes.suffix = "&92;x03&92;x04"];
  *   }
  *   ```
  * @param contains
  *   `contains` requires the field value to have the specified bytes anywhere in
  *   the string.
  *   If the field value doesn't meet the requirement, an error message is generated.
  *  
  *   ```protobuf
  *   message MyBytes {
  *     // value does not contain &92;x02&92;x03
  *     optional bytes value = 1 [(buf.validate.field).bytes.contains = "&92;x02&92;x03"];
  *   }
  *   ```
  * @param in
  *   `in` requires the field value to be equal to one of the specified
  *   values. If the field value doesn't match any of the specified values, an
  *   error message is generated.
  *  
  *   ```protobuf
  *   message MyBytes {
  *     // value must in ["&92;x01&92;x02", "&92;x02&92;x03", "&92;x03&92;x04"]
  *     optional bytes value = 1 [(buf.validate.field).bytes.in = {"&92;x01&92;x02", "&92;x02&92;x03", "&92;x03&92;x04"}];
  *   }
  *   ```
  * @param notIn
  *   `not_in` requires the field value to be not equal to any of the specified
  *   values.
  *   If the field value matches any of the specified values, an error message is
  *   generated.
  *  
  *   ```proto
  *   message MyBytes {
  *     // value must not in ["&92;x01&92;x02", "&92;x02&92;x03", "&92;x03&92;x04"]
  *     optional bytes value = 1 [(buf.validate.field).bytes.not_in = {"&92;x01&92;x02", "&92;x02&92;x03", "&92;x03&92;x04"}];
  *   }
  *   ```
  * @param example
  *   `example` specifies values that the field may have. These values SHOULD
  *   conform to other rules. `example` values will not impact validation
  *   but may be used as helpful guidance on how to populate the given field.
  *  
  *   ```proto
  *   message MyBytes {
  *     bytes value = 1 [
  *       (buf.validate.field).bytes.example = "&92;x01&92;x02",
  *       (buf.validate.field).bytes.example = "&92;x02&92;x03"
  *     ];
  *   }
  *   ```
  */
@SerialVersionUID(0L)
final case class BytesRules(
    const: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    len: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    minLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    maxLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    pattern: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    prefix: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    suffix: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    contains: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    in: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    notIn: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    wellKnown: build.buf.validate.validate.BytesRules.WellKnown = build.buf.validate.validate.BytesRules.WellKnown.Empty,
    example: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[BytesRules] with _root_.scalapb.ExtendableMessage[BytesRules] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (const.isDefined) {
        val __value = const.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
      };
      if (len.isDefined) {
        val __value = len.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(13, __value)
      };
      if (minLen.isDefined) {
        val __value = minLen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
      };
      if (maxLen.isDefined) {
        val __value = maxLen.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, __value)
      };
      if (pattern.isDefined) {
        val __value = pattern.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      if (prefix.isDefined) {
        val __value = prefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
      };
      if (suffix.isDefined) {
        val __value = suffix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, __value)
      };
      if (contains.isDefined) {
        val __value = contains.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, __value)
      };
      in.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(8, __value)
      }
      notIn.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(9, __value)
      }
      if (wellKnown.ip.isDefined) {
        val __value = wellKnown.ip.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(10, __value)
      };
      if (wellKnown.ipv4.isDefined) {
        val __value = wellKnown.ipv4.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, __value)
      };
      if (wellKnown.ipv6.isDefined) {
        val __value = wellKnown.ipv6.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(12, __value)
      };
      example.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(14, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      const.foreach { __v =>
        val __m = __v
        _output__.writeBytes(1, __m)
      };
      minLen.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(2, __m)
      };
      maxLen.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(3, __m)
      };
      pattern.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      prefix.foreach { __v =>
        val __m = __v
        _output__.writeBytes(5, __m)
      };
      suffix.foreach { __v =>
        val __m = __v
        _output__.writeBytes(6, __m)
      };
      contains.foreach { __v =>
        val __m = __v
        _output__.writeBytes(7, __m)
      };
      in.foreach { __v =>
        val __m = __v
        _output__.writeBytes(8, __m)
      };
      notIn.foreach { __v =>
        val __m = __v
        _output__.writeBytes(9, __m)
      };
      wellKnown.ip.foreach { __v =>
        val __m = __v
        _output__.writeBool(10, __m)
      };
      wellKnown.ipv4.foreach { __v =>
        val __m = __v
        _output__.writeBool(11, __m)
      };
      wellKnown.ipv6.foreach { __v =>
        val __m = __v
        _output__.writeBool(12, __m)
      };
      len.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(13, __m)
      };
      example.foreach { __v =>
        val __m = __v
        _output__.writeBytes(14, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getConst: _root_.com.google.protobuf.ByteString = const.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearConst: BytesRules = copy(const = _root_.scala.None)
    def withConst(__v: _root_.com.google.protobuf.ByteString): BytesRules = copy(const = Option(__v))
    def getLen: _root_.scala.Long = len.getOrElse(0L)
    def clearLen: BytesRules = copy(len = _root_.scala.None)
    def withLen(__v: _root_.scala.Long): BytesRules = copy(len = Option(__v))
    def getMinLen: _root_.scala.Long = minLen.getOrElse(0L)
    def clearMinLen: BytesRules = copy(minLen = _root_.scala.None)
    def withMinLen(__v: _root_.scala.Long): BytesRules = copy(minLen = Option(__v))
    def getMaxLen: _root_.scala.Long = maxLen.getOrElse(0L)
    def clearMaxLen: BytesRules = copy(maxLen = _root_.scala.None)
    def withMaxLen(__v: _root_.scala.Long): BytesRules = copy(maxLen = Option(__v))
    def getPattern: _root_.scala.Predef.String = pattern.getOrElse("")
    def clearPattern: BytesRules = copy(pattern = _root_.scala.None)
    def withPattern(__v: _root_.scala.Predef.String): BytesRules = copy(pattern = Option(__v))
    def getPrefix: _root_.com.google.protobuf.ByteString = prefix.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearPrefix: BytesRules = copy(prefix = _root_.scala.None)
    def withPrefix(__v: _root_.com.google.protobuf.ByteString): BytesRules = copy(prefix = Option(__v))
    def getSuffix: _root_.com.google.protobuf.ByteString = suffix.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearSuffix: BytesRules = copy(suffix = _root_.scala.None)
    def withSuffix(__v: _root_.com.google.protobuf.ByteString): BytesRules = copy(suffix = Option(__v))
    def getContains: _root_.com.google.protobuf.ByteString = contains.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearContains: BytesRules = copy(contains = _root_.scala.None)
    def withContains(__v: _root_.com.google.protobuf.ByteString): BytesRules = copy(contains = Option(__v))
    def clearIn = copy(in = _root_.scala.Seq.empty)
    def addIn(__vs: _root_.com.google.protobuf.ByteString *): BytesRules = addAllIn(__vs)
    def addAllIn(__vs: Iterable[_root_.com.google.protobuf.ByteString]): BytesRules = copy(in = in ++ __vs)
    def withIn(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): BytesRules = copy(in = __v)
    def clearNotIn = copy(notIn = _root_.scala.Seq.empty)
    def addNotIn(__vs: _root_.com.google.protobuf.ByteString *): BytesRules = addAllNotIn(__vs)
    def addAllNotIn(__vs: Iterable[_root_.com.google.protobuf.ByteString]): BytesRules = copy(notIn = notIn ++ __vs)
    def withNotIn(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): BytesRules = copy(notIn = __v)
    def getIp: _root_.scala.Boolean = wellKnown.ip.getOrElse(false)
    def withIp(__v: _root_.scala.Boolean): BytesRules = copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ip(__v))
    def getIpv4: _root_.scala.Boolean = wellKnown.ipv4.getOrElse(false)
    def withIpv4(__v: _root_.scala.Boolean): BytesRules = copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ipv4(__v))
    def getIpv6: _root_.scala.Boolean = wellKnown.ipv6.getOrElse(false)
    def withIpv6(__v: _root_.scala.Boolean): BytesRules = copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ipv6(__v))
    def clearExample = copy(example = _root_.scala.Seq.empty)
    def addExample(__vs: _root_.com.google.protobuf.ByteString *): BytesRules = addAllExample(__vs)
    def addAllExample(__vs: Iterable[_root_.com.google.protobuf.ByteString]): BytesRules = copy(example = example ++ __vs)
    def withExample(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): BytesRules = copy(example = __v)
    def clearWellKnown: BytesRules = copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Empty)
    def withWellKnown(__v: build.buf.validate.validate.BytesRules.WellKnown): BytesRules = copy(wellKnown = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => const.orNull
        case 13 => len.orNull
        case 2 => minLen.orNull
        case 3 => maxLen.orNull
        case 4 => pattern.orNull
        case 5 => prefix.orNull
        case 6 => suffix.orNull
        case 7 => contains.orNull
        case 8 => in
        case 9 => notIn
        case 10 => wellKnown.ip.orNull
        case 11 => wellKnown.ipv4.orNull
        case 12 => wellKnown.ipv6.orNull
        case 14 => example
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => const.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => len.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => minLen.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => maxLen.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => pattern.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => prefix.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => suffix.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => contains.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => _root_.scalapb.descriptors.PRepeated(in.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
        case 9 => _root_.scalapb.descriptors.PRepeated(notIn.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
        case 10 => wellKnown.ip.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => wellKnown.ipv4.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => wellKnown.ipv6.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => _root_.scalapb.descriptors.PRepeated(example.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: build.buf.validate.validate.BytesRules.type = build.buf.validate.validate.BytesRules
    // @@protoc_insertion_point(GeneratedMessage[buf.validate.BytesRules])
}

object BytesRules extends scalapb.GeneratedMessageCompanion[build.buf.validate.validate.BytesRules] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[build.buf.validate.validate.BytesRules] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): build.buf.validate.validate.BytesRules = {
    var __const: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __len: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __minLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __maxLen: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __pattern: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __prefix: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __suffix: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __contains: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    val __in: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    val __notIn: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    val __example: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    var __wellKnown: build.buf.validate.validate.BytesRules.WellKnown = build.buf.validate.validate.BytesRules.WellKnown.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __const = _root_.scala.Option(_input__.readBytes())
        case 104 =>
          __len = _root_.scala.Option(_input__.readUInt64())
        case 16 =>
          __minLen = _root_.scala.Option(_input__.readUInt64())
        case 24 =>
          __maxLen = _root_.scala.Option(_input__.readUInt64())
        case 34 =>
          __pattern = _root_.scala.Option(_input__.readStringRequireUtf8())
        case 42 =>
          __prefix = _root_.scala.Option(_input__.readBytes())
        case 50 =>
          __suffix = _root_.scala.Option(_input__.readBytes())
        case 58 =>
          __contains = _root_.scala.Option(_input__.readBytes())
        case 66 =>
          __in += _input__.readBytes()
        case 74 =>
          __notIn += _input__.readBytes()
        case 80 =>
          __wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ip(_input__.readBool())
        case 88 =>
          __wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ipv4(_input__.readBool())
        case 96 =>
          __wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ipv6(_input__.readBool())
        case 114 =>
          __example += _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    build.buf.validate.validate.BytesRules(
        const = __const,
        len = __len,
        minLen = __minLen,
        maxLen = __maxLen,
        pattern = __pattern,
        prefix = __prefix,
        suffix = __suffix,
        contains = __contains,
        in = __in.result(),
        notIn = __notIn.result(),
        example = __example.result(),
        wellKnown = __wellKnown,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[build.buf.validate.validate.BytesRules] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      build.buf.validate.validate.BytesRules(
        const = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        len = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        minLen = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        maxLen = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        pattern = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        prefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        suffix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        contains = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        in = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty),
        notIn = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty),
        example = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty),
        wellKnown = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.BytesRules.WellKnown.Ip(_))
            .orElse[build.buf.validate.validate.BytesRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.BytesRules.WellKnown.Ipv4(_)))
            .orElse[build.buf.validate.validate.BytesRules.WellKnown](__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(build.buf.validate.validate.BytesRules.WellKnown.Ipv6(_)))
            .getOrElse(build.buf.validate.validate.BytesRules.WellKnown.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ValidateProto.javaDescriptor.getMessageTypes().get(19)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ValidateProto.scalaDescriptor.messages(19)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = build.buf.validate.validate.BytesRules(
    const = _root_.scala.None,
    len = _root_.scala.None,
    minLen = _root_.scala.None,
    maxLen = _root_.scala.None,
    pattern = _root_.scala.None,
    prefix = _root_.scala.None,
    suffix = _root_.scala.None,
    contains = _root_.scala.None,
    in = _root_.scala.Seq.empty,
    notIn = _root_.scala.Seq.empty,
    example = _root_.scala.Seq.empty,
    wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Empty
  )
  sealed trait WellKnown extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isIp: _root_.scala.Boolean = false
    def isIpv4: _root_.scala.Boolean = false
    def isIpv6: _root_.scala.Boolean = false
    def ip: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv4: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def ipv6: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
  }
  object WellKnown {
    @SerialVersionUID(0L)
    case object Empty extends build.buf.validate.validate.BytesRules.WellKnown {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Ip(value: _root_.scala.Boolean) extends build.buf.validate.validate.BytesRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIp: _root_.scala.Boolean = true
      override def ip: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class Ipv4(value: _root_.scala.Boolean) extends build.buf.validate.validate.BytesRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv4: _root_.scala.Boolean = true
      override def ipv4: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 11
    }
    @SerialVersionUID(0L)
    final case class Ipv6(value: _root_.scala.Boolean) extends build.buf.validate.validate.BytesRules.WellKnown {
      type ValueType = _root_.scala.Boolean
      override def isIpv6: _root_.scala.Boolean = true
      override def ipv6: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 12
    }
  }
  implicit class BytesRulesLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.BytesRules]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, build.buf.validate.validate.BytesRules](_l) {
    def const: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getConst)((c_, f_) => c_.copy(const = _root_.scala.Option(f_)))
    def optionalConst: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.const)((c_, f_) => c_.copy(const = f_))
    def len: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getLen)((c_, f_) => c_.copy(len = _root_.scala.Option(f_)))
    def optionalLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.len)((c_, f_) => c_.copy(len = f_))
    def minLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getMinLen)((c_, f_) => c_.copy(minLen = _root_.scala.Option(f_)))
    def optionalMinLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.minLen)((c_, f_) => c_.copy(minLen = f_))
    def maxLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getMaxLen)((c_, f_) => c_.copy(maxLen = _root_.scala.Option(f_)))
    def optionalMaxLen: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.maxLen)((c_, f_) => c_.copy(maxLen = f_))
    def pattern: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPattern)((c_, f_) => c_.copy(pattern = _root_.scala.Option(f_)))
    def optionalPattern: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pattern)((c_, f_) => c_.copy(pattern = f_))
    def prefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getPrefix)((c_, f_) => c_.copy(prefix = _root_.scala.Option(f_)))
    def optionalPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.prefix)((c_, f_) => c_.copy(prefix = f_))
    def suffix: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getSuffix)((c_, f_) => c_.copy(suffix = _root_.scala.Option(f_)))
    def optionalSuffix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.suffix)((c_, f_) => c_.copy(suffix = f_))
    def contains: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getContains)((c_, f_) => c_.copy(contains = _root_.scala.Option(f_)))
    def optionalContains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.contains)((c_, f_) => c_.copy(contains = f_))
    def in: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.in)((c_, f_) => c_.copy(in = f_))
    def notIn: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.notIn)((c_, f_) => c_.copy(notIn = f_))
    def ip: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIp)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ip(f_)))
    def ipv4: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv4)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ipv4(f_)))
    def ipv6: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIpv6)((c_, f_) => c_.copy(wellKnown = build.buf.validate.validate.BytesRules.WellKnown.Ipv6(f_)))
    def example: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.example)((c_, f_) => c_.copy(example = f_))
    def wellKnown: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.BytesRules.WellKnown] = field(_.wellKnown)((c_, f_) => c_.copy(wellKnown = f_))
  }
  final val CONST_FIELD_NUMBER = 1
  final val LEN_FIELD_NUMBER = 13
  final val MIN_LEN_FIELD_NUMBER = 2
  final val MAX_LEN_FIELD_NUMBER = 3
  final val PATTERN_FIELD_NUMBER = 4
  final val PREFIX_FIELD_NUMBER = 5
  final val SUFFIX_FIELD_NUMBER = 6
  final val CONTAINS_FIELD_NUMBER = 7
  final val IN_FIELD_NUMBER = 8
  final val NOT_IN_FIELD_NUMBER = 9
  final val IP_FIELD_NUMBER = 10
  final val IPV4_FIELD_NUMBER = 11
  final val IPV6_FIELD_NUMBER = 12
  final val EXAMPLE_FIELD_NUMBER = 14
  def of(
    const: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    len: _root_.scala.Option[_root_.scala.Long],
    minLen: _root_.scala.Option[_root_.scala.Long],
    maxLen: _root_.scala.Option[_root_.scala.Long],
    pattern: _root_.scala.Option[_root_.scala.Predef.String],
    prefix: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    suffix: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    contains: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    in: _root_.scala.Seq[_root_.com.google.protobuf.ByteString],
    notIn: _root_.scala.Seq[_root_.com.google.protobuf.ByteString],
    wellKnown: build.buf.validate.validate.BytesRules.WellKnown,
    example: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]
  ): _root_.build.buf.validate.validate.BytesRules = _root_.build.buf.validate.validate.BytesRules(
    const,
    len,
    minLen,
    maxLen,
    pattern,
    prefix,
    suffix,
    contains,
    in,
    notIn,
    wellKnown,
    example
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[buf.validate.BytesRules])
}
