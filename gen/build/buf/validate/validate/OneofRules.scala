// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package build.buf.validate.validate

/** The `OneofRules` message type enables you to manage rules for
  * oneof fields in your protobuf messages.
  *
  * @param required
  *   If `required` is true, exactly one field of the oneof must be present. A
  *   validation error is returned if no fields in the oneof are present. The
  *   field itself may still be a default value; further rules
  *   should be placed on the fields themselves to ensure they are valid values,
  *   such as `min_len` or `gt`.
  *  
  *   ```proto
  *   message MyMessage {
  *     oneof value {
  *       // Either `a` or `b` must be set. If `a` is set, it must also be
  *       // non-empty; whereas if `b` is set, it can still be an empty string.
  *       option (buf.validate.oneof).required = true;
  *       string a = 1 [(buf.validate.field).string.min_len = 1];
  *       string b = 2;
  *     }
  *   }
  *   ```
  */
@SerialVersionUID(0L)
final case class OneofRules(
    required: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[OneofRules] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (required.isDefined) {
        val __value = required.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      required.foreach { __v =>
        val __m = __v
        _output__.writeBool(1, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getRequired: _root_.scala.Boolean = required.getOrElse(false)
    def clearRequired: OneofRules = copy(required = _root_.scala.None)
    def withRequired(__v: _root_.scala.Boolean): OneofRules = copy(required = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => required.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => required.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: build.buf.validate.validate.OneofRules.type = build.buf.validate.validate.OneofRules
    // @@protoc_insertion_point(GeneratedMessage[buf.validate.OneofRules])
}

object OneofRules extends scalapb.GeneratedMessageCompanion[build.buf.validate.validate.OneofRules] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[build.buf.validate.validate.OneofRules] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): build.buf.validate.validate.OneofRules = {
    var __required: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __required = _root_.scala.Option(_input__.readBool())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    build.buf.validate.validate.OneofRules(
        required = __required,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[build.buf.validate.validate.OneofRules] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      build.buf.validate.validate.OneofRules(
        required = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ValidateProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ValidateProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = build.buf.validate.validate.OneofRules(
    required = _root_.scala.None
  )
  implicit class OneofRulesLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.OneofRules]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, build.buf.validate.validate.OneofRules](_l) {
    def required: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getRequired)((c_, f_) => c_.copy(required = _root_.scala.Option(f_)))
    def optionalRequired: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.required)((c_, f_) => c_.copy(required = f_))
  }
  final val REQUIRED_FIELD_NUMBER = 1
  def of(
    required: _root_.scala.Option[_root_.scala.Boolean]
  ): _root_.build.buf.validate.validate.OneofRules = _root_.build.buf.validate.validate.OneofRules(
    required
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[buf.validate.OneofRules])
}
