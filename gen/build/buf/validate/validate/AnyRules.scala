// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package build.buf.validate.validate

/** AnyRules describe rules applied exclusively to the `google.protobuf.Any` well-known type.
  *
  * @param in
  *   `in` requires the field's `type_url` to be equal to one of the
  *  specified values. If it doesn't match any of the specified values, an error
  *   message is generated.
  *  
  *   ```proto
  *   message MyAny {
  *     //  The `value` field must have a `type_url` equal to one of the specified values.
  *     google.protobuf.Any value = 1 [(buf.validate.field).any = {
  *         in: ["type.googleapis.com/MyType1", "type.googleapis.com/MyType2"]
  *     }];
  *   }
  *   ```
  * @param notIn
  *   requires the field's type_url to be not equal to any of the specified values. If it matches any of the specified values, an error message is generated.
  *  
  *   ```proto
  *   message MyAny {
  *     //  The `value` field must not have a `type_url` equal to any of the specified values.
  *     google.protobuf.Any value = 1 [(buf.validate.field).any = {
  *         not_in: ["type.googleapis.com/ForbiddenType1", "type.googleapis.com/ForbiddenType2"]
  *     }];
  *   }
  *   ```
  */
@SerialVersionUID(0L)
final case class AnyRules(
    in: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    notIn: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AnyRules] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      in.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      notIn.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      in.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      notIn.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def clearIn = copy(in = _root_.scala.Seq.empty)
    def addIn(__vs: _root_.scala.Predef.String *): AnyRules = addAllIn(__vs)
    def addAllIn(__vs: Iterable[_root_.scala.Predef.String]): AnyRules = copy(in = in ++ __vs)
    def withIn(__v: _root_.scala.Seq[_root_.scala.Predef.String]): AnyRules = copy(in = __v)
    def clearNotIn = copy(notIn = _root_.scala.Seq.empty)
    def addNotIn(__vs: _root_.scala.Predef.String *): AnyRules = addAllNotIn(__vs)
    def addAllNotIn(__vs: Iterable[_root_.scala.Predef.String]): AnyRules = copy(notIn = notIn ++ __vs)
    def withNotIn(__v: _root_.scala.Seq[_root_.scala.Predef.String]): AnyRules = copy(notIn = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => in
        case 3 => notIn
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => _root_.scalapb.descriptors.PRepeated(in.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(notIn.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: build.buf.validate.validate.AnyRules.type = build.buf.validate.validate.AnyRules
    // @@protoc_insertion_point(GeneratedMessage[buf.validate.AnyRules])
}

object AnyRules extends scalapb.GeneratedMessageCompanion[build.buf.validate.validate.AnyRules] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[build.buf.validate.validate.AnyRules] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): build.buf.validate.validate.AnyRules = {
    val __in: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __notIn: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 18 =>
          __in += _input__.readStringRequireUtf8()
        case 26 =>
          __notIn += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    build.buf.validate.validate.AnyRules(
        in = __in.result(),
        notIn = __notIn.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[build.buf.validate.validate.AnyRules] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      build.buf.validate.validate.AnyRules(
        in = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        notIn = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ValidateProto.javaDescriptor.getMessageTypes().get(23)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ValidateProto.scalaDescriptor.messages(23)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = build.buf.validate.validate.AnyRules(
    in = _root_.scala.Seq.empty,
    notIn = _root_.scala.Seq.empty
  )
  implicit class AnyRulesLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, build.buf.validate.validate.AnyRules]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, build.buf.validate.validate.AnyRules](_l) {
    def in: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.in)((c_, f_) => c_.copy(in = f_))
    def notIn: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.notIn)((c_, f_) => c_.copy(notIn = f_))
  }
  final val IN_FIELD_NUMBER = 2
  final val NOT_IN_FIELD_NUMBER = 3
  def of(
    in: _root_.scala.Seq[_root_.scala.Predef.String],
    notIn: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.build.buf.validate.validate.AnyRules = _root_.build.buf.validate.validate.AnyRules(
    in,
    notIn
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[buf.validate.AnyRules])
}
